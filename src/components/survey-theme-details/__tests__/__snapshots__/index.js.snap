// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SurveyThemeDetails renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SurveyThemeDetails
    theme={
        Object {
            "questions": Array [],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="survey-theme-details__container"
>
        <h4>
                Survey Theme: 
                <span
                        className="survey-theme-details__name"
                />
        </h4>
        <h5>
                Questions:
        </h5>
        <ul
                className="survey-theme-details__questions"
        >
                
        </ul>
</div>,
      "className": "survey-theme-details",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h4>
            Survey Theme: 
            <span
                        className="survey-theme-details__name"
            />
</h4>,
          <h5>
            Questions:
</h5>,
          <ul
            className="survey-theme-details__questions"
>
            
</ul>,
        ],
        "className": "survey-theme-details__container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Survey Theme: ",
              <span
                className="survey-theme-details__name"
/>,
            ],
          },
          "ref": null,
          "rendered": Array [
            "Survey Theme: ",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": undefined,
                "className": "survey-theme-details__name",
              },
              "ref": null,
              "rendered": null,
              "type": "span",
            },
          ],
          "type": "h4",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Questions:",
          },
          "ref": null,
          "rendered": "Questions:",
          "type": "h5",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "survey-theme-details__questions",
          },
          "ref": null,
          "rendered": Array [],
          "type": "ul",
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="survey-theme-details__container"
>
          <h4>
                    Survey Theme: 
                    <span
                              className="survey-theme-details__name"
                    />
          </h4>
          <h5>
                    Questions:
          </h5>
          <ul
                    className="survey-theme-details__questions"
          >
                    
          </ul>
</div>,
        "className": "survey-theme-details",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h4>
              Survey Theme: 
              <span
                            className="survey-theme-details__name"
              />
</h4>,
            <h5>
              Questions:
</h5>,
            <ul
              className="survey-theme-details__questions"
>
              
</ul>,
          ],
          "className": "survey-theme-details__container",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Survey Theme: ",
                <span
                  className="survey-theme-details__name"
/>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "Survey Theme: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": undefined,
                  "className": "survey-theme-details__name",
                },
                "ref": null,
                "rendered": null,
                "type": "span",
              },
            ],
            "type": "h4",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Questions:",
            },
            "ref": null,
            "rendered": "Questions:",
            "type": "h5",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [],
              "className": "survey-theme-details__questions",
            },
            "ref": null,
            "rendered": Array [],
            "type": "ul",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
